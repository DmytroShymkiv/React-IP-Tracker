{"version":3,"sources":["config.js","images/icon-location.svg","Components/TrackerContext.js","Components/Background/Map.js","Components/Background/Background.js","Components/Loader/Loader.js","Components/Tracker/Details.js","Components/Toast.js","Components/Tracker/TrackerInput.js","Components/Tracker/Tracker.js","App.js","reportWebVitals.js","index.js"],"names":["config","jawgAccsessToken","ipifyAPIKey","TrackerContext","React","createContext","useTracker","useContext","TrackerProvider","children","useState","details","setDetails","isLoading","setIsLoading","getIP","a","axios","get","response","data","setInitialDetails","ip","trackAddress","useEffect","isFetched","url","getRequestURL","location","city","country","geonameId","timezone","lat","lng","isp","position","console","log","request","isNaN","length","value","Provider","Map","LayerURL","icon","L","iconUrl","markerIcon","mapOptions","center","zoom","scrollWheelZoom","zoomControl","New","useMap","flyTo","MapContainer","className","TileLayer","Marker","Background","Loader","class","Details","Toast","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","TrackerInput","setIP","handleSubmit","e","preventDefault","toast","error","onSubmit","onChange","target","placeholder","type","disabled","Tracker","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f936c17d.chunk.js","sourcesContent":["const config = {\r\n  jawgAccsessToken:\r\n    \"0n72W4O70irXH3A3yoCzKq7PmB2W93GoD314nXn4qZAdljJv7XNzHezazG5JdKXW\",\r\n  ipifyAPIKey: \"at_3PAmfXnwSRCYlSpf4fBC3Rqx43yoA\",\r\n};\r\n\r\nexport default config;\r\n","export default __webpack_public_path__ + \"static/media/icon-location.7e6459d2.svg\";","import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport config from \"../config\";\r\nconst TrackerContext = React.createContext();\r\n\r\nexport function useTracker() {\r\n  return useContext(TrackerContext);\r\n}\r\n\r\nexport default function TrackerProvider({ children }) {\r\n  const [details, setDetails] = useState();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const getIP = async () => {\r\n    const getIpUrl = `https://api.ipify.org`;\r\n    const response = await axios.get(getIpUrl);\r\n    return response.data;\r\n  };\r\n  const setInitialDetails = async () => {\r\n    const ip = await getIP();\r\n    trackAddress(ip);\r\n  };\r\n  useEffect(() => {\r\n    setInitialDetails();\r\n  }, []);\r\n  const trackAddress = async (ip) => {\r\n    setIsLoading(true);\r\n    let isFetched = true;\r\n    const url = getRequestURL(ip);\r\n    try {\r\n      const response = await axios.get(url);\r\n      const data = response.data;\r\n      const { city, country, geonameId, timezone, lat, lng } = data.location;\r\n\r\n      const details = {\r\n        city,\r\n        country,\r\n        geonameId,\r\n        timezone,\r\n        isp: data.isp,\r\n        ip: data.ip,\r\n        position: [lat, lng],\r\n      };\r\n      setDetails(details);\r\n    } catch (error) {\r\n      isFetched = false;\r\n    }\r\n\r\n    setIsLoading(false);\r\n    console.log(isFetched);\r\n    return isFetched;\r\n  };\r\n\r\n  const getRequestURL = (request) => {\r\n    const url = `https://geo.ipify.org/api/v1?apiKey=${config.ipifyAPIKey}`;\r\n    if (!isNaN(request[request.length - 1]))\r\n      return `${url}&ipAddress=${request}`;\r\n    else return `${url}&domain=${request}`;\r\n  };\r\n\r\n  const value = {\r\n    isLoading,\r\n    details,\r\n    trackAddress,\r\n  };\r\n\r\n  return (\r\n    <TrackerContext.Provider value={value}>{children}</TrackerContext.Provider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport L from \"leaflet\";\r\nimport { MapContainer, TileLayer, Marker, useMap } from \"react-leaflet\";\r\nimport config from \"../../config\";\r\nimport markerIcon from \"../../images/icon-location.svg\";\r\nimport { useTracker } from \"../TrackerContext.js\";\r\n\r\nexport default function Map() {\r\n  const { details } = useTracker();\r\n  const LayerURL = `https://tile.jawg.io/jawg-streets/{z}/{x}/{y}{r}.png?access-token=${config.jawgAccsessToken}`;\r\n  const icon = L.icon({\r\n    iconUrl: markerIcon,\r\n  });\r\n  const mapOptions = {\r\n    center: details?.position,\r\n    zoom: 13,\r\n    scrollWheelZoom: true,\r\n    zoomControl: false,\r\n  };\r\n  function New() {\r\n    const map = useMap();\r\n    map.flyTo(details.position, 15, 2);\r\n    return null;\r\n  }\r\n  return details ? (\r\n    <MapContainer className=\"map\" {...mapOptions}>\r\n      <TileLayer url={LayerURL} />\r\n      <New />\r\n      <Marker position={details.position} icon={icon} />\r\n    </MapContainer>\r\n  ) : (\r\n    <div className=\"map-mockup\" />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Map from \"./Map\";\r\nexport default function Background() {\r\n  return (\r\n    <div className=\"background\">\r\n      <div className=\"top-bg\" />\r\n      <Map />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./loader.css\";\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div class=\"lds-ellipsis\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useTracker } from \"../TrackerContext.js\";\r\nimport Loader from \"../Loader/Loader\"\r\n\r\nexport default function Details() {\r\n  const { details, isLoading } = useTracker();\r\n  return (\r\n    <div className=\"details\">\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <div className=\"details-section\">\r\n            <div className=\"details-title\">IP Address</div>\r\n            <div className=\"details-section-value\">{details?.ip}</div>\r\n          </div>\r\n          \r\n          <div className=\"details-section\">\r\n            <div className=\"details-title\"> Location</div>\r\n            <div className=\"details-section-value\">{`${details?.city}, ${details?.country}, ${details?.geonameId}`}</div>\r\n          </div>\r\n          \r\n          <div className=\"details-section\">\r\n            <div className=\"details-title\">Timezone</div>\r\n            <div className=\"details-section-value\">UTC {details?.timezone}</div>\r\n          </div>\r\n          \r\n          <div className=\"details-section\">\r\n            <div className=\"details-title\">ISP</div>\r\n            <div className=\"details-section-value\">{details?.isp}</div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function Toast() {\r\n  return (\r\n    <ToastContainer\r\n      position=\"top-right\"\r\n      autoClose={2000}\r\n      hideProgressBar={false}\r\n      newestOnTop={false}\r\n      closeOnClick\r\n      rtl={false}\r\n      pauseOnFocusLoss\r\n      draggable\r\n      pauseOnHover\r\n    />\r\n  );\r\n}\r\nexport function showToast() {\r\n  toast.error(\"Input correct IP or domain\");\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useTracker } from \"../TrackerContext.js\";\r\nimport Toast, { showToast } from \"../Toast\";\r\n\r\nexport default function TrackerInput() {\r\n  const [ip, setIP] = useState(\"\");\r\n  const { trackAddress, isLoading } = useTracker();\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const isFetched = await trackAddress(ip);\r\n    if (!isFetched) {\r\n      showToast();\r\n    }\r\n    setIP(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)} className=\"tracker-form\">\r\n      <Toast />\r\n      <input\r\n        value={ip}\r\n        onChange={(e) => setIP(e.target.value)}\r\n        className=\"tracker-input\"\r\n        placeholder=\"Search for any IP address or domain\"\r\n      />\r\n      <button type=\"submit\" className=\"tracker-submit\" disabled={isLoading}>\r\n        <i className=\"arrow right\" />\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Details from \"./Details\";\r\nimport TrackerInput from \"./TrackerInput\";\r\n\r\nexport default function Tracker() {\r\n  return (\r\n    <div className=\"tracker\">\r\n      <h1 className=\"tracker-title\">IP Address Tracker</h1>\r\n      <TrackerInput />\r\n      <Details />\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Background from \"./Components/Background/Background\";\nimport Tracker from \"./Components/Tracker/Tracker\";\nimport TrackerProvider from \"./Components/TrackerContext\";\n\nfunction App() {\n  return (\n    <TrackerProvider>\n      <Background />\n      <Tracker />\n    </TrackerProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}